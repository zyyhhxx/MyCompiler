-----------------------------Running Piazza Sample Test 0-----------------------------
PRINT:print
..INT_LIT:131313
SEMI:;
-----------------------------Running Piazza Sample Test 1-----------------------------
PRINT:print
..INT_LIT:1
SEMI:;
PRINT:print
..OP_PLUS:+
....INT_LIT:1
....INT_LIT:2
SEMI:;
PRINT:print
..OP_PLUS:+
....INT_LIT:1
....OP_MULT:*
......INT_LIT:2
......INT_LIT:3
SEMI:;
PRINT:print
..OP_MULT:*
....LPAR:(
......OP_PLUS:+
........INT_LIT:1
........INT_LIT:2
....RPAR:)
....INT_LIT:3
SEMI:;
PRINT:print
..OP_DIV:/
....OP_MULT:*
......LPAR:(
........OP_PLUS:+
..........INT_LIT:1
..........INT_LIT:2
......RPAR:)
......INT_LIT:3
....INT_LIT:4
SEMI:;
PRINT:print
..OP_MULT:*
....LPAR:(
......OP_PLUS:+
........INT_LIT:1
........INT_LIT:2
....RPAR:)
....LPAR:(
......OP_DIV:/
........INT_LIT:3
........INT_LIT:4
....RPAR:)
SEMI:;
KW_IF:if
..OP_GREATER:>
....INT_LIT:0
....INT_LIT:1
KW_THEN:then
..PRINT:print
....INT_LIT:0
..SEMI:;
..KW_ELSE:else
....PRINT:print
......INT_LIT:1
....SEMI:;
KW_END:end
KW_IF:if
KW_IF:if
..OP_GREATER:>
....INT_LIT:0
....INT_LIT:1
KW_THEN:then
..PRINT:print
....INT_LIT:0
..SEMI:;
KW_END:end
KW_IF:if
KW_IF:if
..OP_GREATER:>
....INT_LIT:111
....OP_DIV:/
......INT_LIT:222
......INT_LIT:3
KW_THEN:then
..PRINT:print
....INT_LIT:1
..SEMI:;
..KW_ELSIF:elsif
....KW_ELSIF:elsif
......OP_EQUAL:==
........INT_LIT:111
........OP_DIV:/
..........INT_LIT:222
..........INT_LIT:3
....KW_THEN:then
......PRINT:print
........INT_LIT:2
......SEMI:;
....OP_EQUAL:==
......INT_LIT:111
......OP_DIV:/
........INT_LIT:222
........INT_LIT:2
..KW_THEN:then
....PRINT:print
......INT_LIT:3
....SEMI:;
..KW_ELSE:else
....PRINT:print
......INT_LIT:9999
....SEMI:;
KW_END:end
KW_IF:if
-----------------------------Running Piazza Sample Test 2-----------------------------
KW_GLOBAL:global
ASSIGN:=
ID:a
..INT_LIT:0
SEMI:;
KW_GLOBAL:global
ASSIGN:=
ID:b
..INT_LIT:1
SEMI:;
ASSIGN:=
..ID:a
..OP_DIV:/
....LPAR:(
......OP_MINUS:-
........OP_MULT:*
..........INT_LIT:234
..........ID:b
........OP_MULT:*
..........INT_LIT:459
..........ID:a
....RPAR:)
....INT_LIT:2
SEMI:;
ASSIGN:=
..ID:b
..INT_LIT:2
SEMI:;
PRINT:print
..ID:a
SEMI:;
PRINT:print
..ID:b
SEMI:;
ASSIGN:=
..ID:a
..OP_DIV:/
....LPAR:(
......OP_MINUS:-
........OP_MULT:*
..........INT_LIT:234
..........ID:b
........OP_MULT:*
..........INT_LIT:459
..........ID:a
....RPAR:)
....INT_LIT:2
SEMI:;
EXCHANGE:<->
..ID:a
..ID:b
SEMI:;
PRINT:print
..ID:a
SEMI:;
PRINT:print
..ID:b
SEMI:;
-----------------------------Running Piazza Sample Test 3-----------------------------
KW_GLOBAL:global
ASSIGN:=
ID:a
..INT_LIT:0
SEMI:;
KW_GLOBAL:global
ASSIGN:=
ID:b
..INT_LIT:1
SEMI:;
KW_IN:in
KW_FOREACH:foreach
ID:c
..OP_DOTDOT:..
....INT_LIT:1
....INT_LIT:10
KW_DO:do
..PRINT:print
....ID:c
..SEMI:;
KW_END:end
KW_FOR:for
KW_IN:in
KW_FOREACH:foreach
ID:c
..OP_DOTDOT:..
....INT_LIT:1
....INT_LIT:10
KW_DO:do
..KW_IF:if
....OP_EQUAL:==
......ID:c
......OP_MULT:*
........LPAR:(
..........OP_DIV:/
............ID:c
............INT_LIT:2
........RPAR:)
........INT_LIT:2
..KW_THEN:then
....PRINT:print
......INT_LIT:2
....SEMI:;
....KW_ELSE:else
......PRINT:print
........INT_LIT:1
......SEMI:;
..KW_END:end
..KW_IF:if
KW_END:end
KW_FOR:for
-----------------------------Running Piazza Sample Test 4-----------------------------
KW_DEFUN:defun
LPAR:(
KW_DEFUN:defun
ID:fib
ID:x
RPAR:)
..KW_IF:if
....OP_LESS:<
......ID:x
......INT_LIT:0
..KW_THEN:then
....PRINT:print
......INT_LIT:9999
....SEMI:;
....RETURN:return
......OP_MINUS:-
........INT_LIT:0
........INT_LIT:1
....SEMI:;
....KW_ELSIF:elsif
......KW_ELSIF:elsif
........OP_EQUAL:==
..........ID:x
..........INT_LIT:0
......KW_THEN:then
........RETURN:return
..........INT_LIT:0
........SEMI:;
......OP_EQUAL:==
........ID:x
........INT_LIT:1
....KW_THEN:then
......RETURN:return
........INT_LIT:1
......SEMI:;
....KW_ELSE:else
......ASSIGN:=
........OP_COMMA:,
..........ID:a
..........ID:b
........OP_COMMA:,
..........INT_LIT:0
..........INT_LIT:1
......SEMI:;
......ASSIGN:=
........ID:count
........INT_LIT:1
......SEMI:;
......KW_WHILE:while
........OP_LESSEQUAL:<=
..........ID:count
..........ID:x
......KW_DO:do
........ASSIGN:=
..........OP_COMMA:,
............ID:a
............ID:b
..........OP_COMMA:,
............ID:b
............OP_PLUS:+
..............ID:a
..............ID:b
........SEMI:;
......KW_END:end
......KW_WHILE:while
......RETURN:return
........ID:a
......SEMI:;
..KW_END:end
..KW_IF:if
KW_END:end
KW_IN:in
KW_FOREACH:foreach
ID:c
..OP_DOTDOT:..
....INT_LIT:1
....INT_LIT:10
KW_DO:do
..PRINT:print
....ID:c
..SEMI:;
..PRINT:print
....ID:fib
......ID:c
..SEMI:;
KW_END:end
KW_FOR:for
KW_DEFUN:defun
LPAR:(
KW_DEFUN:defun
ID:fib_two
ID:x
RPAR:)
..KW_IF:if
....OP_LESS:<
......ID:x
......INT_LIT:0
..KW_THEN:then
....PRINT:print
......INT_LIT:9999
....SEMI:;
....RETURN:return
......OP_MINUS:-
........INT_LIT:0
........INT_LIT:1
....SEMI:;
....KW_ELSIF:elsif
......KW_ELSIF:elsif
........OP_EQUAL:==
..........ID:x
..........INT_LIT:0
......KW_THEN:then
........RETURN:return
..........INT_LIT:0
........SEMI:;
......OP_EQUAL:==
........ID:x
........INT_LIT:1
....KW_THEN:then
......RETURN:return
........INT_LIT:1
......SEMI:;
....KW_ELSE:else
......RETURN:return
........ID:fib_two
..........OP_PLUS:+
............LPAR:(
..............OP_MINUS:-
................ID:x
................INT_LIT:1
............RPAR:)
............ID:fib_two
..............LPAR:(
................OP_MINUS:-
..................ID:x
..................INT_LIT:2
..............RPAR:)
......SEMI:;
..KW_END:end
..KW_IF:if
KW_END:end
KW_IN:in
KW_FOREACH:foreach
ID:c
..OP_DOTDOT:..
....INT_LIT:1
....INT_LIT:10
KW_DO:do
..PRINT:print
....ID:c
..SEMI:;
..PRINT:print
....ID:fib_two
......ID:c
..SEMI:;
KW_END:end
KW_FOR:for
-----------------------------Running Piazza Sample Test 5-----------------------------
KW_ARRAY:array
OP_DOTDOT:..
ID:a
LBRAK:[
..INT_LIT:234
..INT_LIT:123
RBRAK:]
..ASSIGN:=
..ID:a
....OP_PLUS:+
......OP_MINUS:-
........OP_MULT:*
..........OP_MULT:*
............ID:a
............ID:a
..........ID:a
........OP_MULT:*
..........INT_LIT:2
..........ID:a
......INT_LIT:4
SEMI:;
KW_GLOBAL:global
ASSIGN:=
ID:a
..INT_LIT:1
SEMI:;
KW_LOCAL:local
ASSIGN:=
ID:a
..ID:a
SEMI:;
ASSIGN:=
..ID:a
..OP_COMMA:,
....OP_DOT:.
....ID:a
....INT_LIT:0
....OP_COMMA:,
......OP_DOT:.
......ID:a
......INT_LIT:0
......INT_LIT:0
SEMI:;
KW_IN:in
KW_FOREACH:foreach
ID:a
..ID:a
KW_DO:do
..PRINT:print
....OP_COMMA:,
......ID:a
......OP_COMMA:,
........ID:a
........LBRAK:[
..........OP_PLUS:+
............ID:a
............INT_LIT:1
........RBRAK:]
........ID:a
........LBRAK:[
..........OP_PLUS:+
............OP_PLUS:+
..............OP_DOT:.
..............ID:a
..............INT_LIT:7
..............INT_LIT:49
............ID:a
............LBRAK:[
..............OP_PLUS:+
................OP_DOT:.
................ID:a
................INT_LIT:3
................INT_LIT:5
............RBRAK:]
........RBRAK:]
..SEMI:;
KW_END:end
KW_FOR:for
KW_IF:if
..OP_LESS:<
....ID:a
....LBRAK:[
......INT_LIT:0
....RBRAK:]
....OP_PLUS:+
......OP_DIV:/
........OP_DOT:.
........ID:a
........INT_LIT:0
........ID:a
......INT_LIT:5
KW_THEN:then
..PRINT:print
....INT_LIT:999
..SEMI:;
..KW_ELSE:else
....PRINT:print
......INT_LIT:777
....SEMI:;
KW_END:end
KW_IF:if
KW_DEFUN:defun
LPAR:(
KW_DEFUN:defun
ID:a
ID:a
..OP_COMMA:,
....OP_COMMA:,
......OP_COMMA:,
......ID:aa
....ID:aaa
..ID:a
RPAR:)
..KW_LOCAL:local
..ASSIGN:=
..ID:a
....ID:aa
..SEMI:;
..KW_GLOBAL:global
..ASSIGN:=
..ID:aaa
....ID:aa
..SEMI:;
..KW_IF:if
....OP_EQUAL:==
......ID:a
......LBRAK:[
........ID:aa
........LBRAK:[
..........ID:aaa
........RBRAK:]
......RBRAK:]
......ID:aaa
......LBRAK:[
........OP_DOT:.
........ID:a
........INT_LIT:7
......RBRAK:]
..KW_THEN:then
....RETURN:return
......ID:aaa
......LBRAK:[
........OP_DOT:.
........ID:a
........INT_LIT:5
......RBRAK:]
....SEMI:;
....KW_ELSE:else
......EXCHANGE:<->
........ID:a
........LBRAK:[
..........ID:a
..........LBRAK:[
............INT_LIT:7
..........RBRAK:]
........RBRAK:]
........OP_DOT:.
........ID:a
........INT_LIT:3
......SEMI:;
......RETURN:return
........ID:a
........LBRAK:[
..........ID:a
..........LBRAK:[
............OP_DOT:.
............ID:a
............INT_LIT:3
..........RBRAK:]
........RBRAK:]
......SEMI:;
..KW_END:end
..KW_IF:if
KW_END:end
KW_WHILE:while
..OP_NOTEQUA:!=
....ID:a
....OP_DOT:.
....ID:a
....INT_LIT:7
KW_DO:do
..EXCHANGE:<->
....ID:a
....OP_COMMA:,
......ID:a
......ID:a
..SEMI:;
KW_END:end
KW_WHILE:while
-----------------------------Running Piazza Sample Test 10-----------------------------
PRINT:print
..OP_PLUS:+
....OP_MULT:*
......INT_LIT:123
......INT_LIT:231
....LPAR:(
......OP_DIV:/
........INT_LIT:123
........INT_LIT:45
....RPAR:)
SEMI:;
KW_GLOBAL:global
ASSIGN:=
ID:a
..INT_LIT:10
SEMI:;
PRINT:print
..OP_MULT:*
....ID:a
....ID:a
SEMI:;
KW_DEFUN:defun
LPAR:(
KW_DEFUN:defun
ID:square
ID:x
RPAR:)
..RETURN:return
....OP_MULT:*
......ID:x
......ID:x
..SEMI:;
KW_END:end
KW_GLOBAL:global
ASSIGN:=
ID:b
..INT_LIT:12
SEMI:;
PRINT:print
..ID:square
....OP_PLUS:+
......LPAR:(
........ID:a
......RPAR:)
......ID:square
........LPAR:(
..........ID:b
........RPAR:)
SEMI:;
PRINT:print
..ID:square
....OP_PLUS:+
......ID:a
......ID:square
........ID:b
SEMI:;
KW_ARRAY:array
OP_DOTDOT:..
ID:arr
LBRAK:[
..INT_LIT:1
..INT_LIT:10
RBRAK:]
SEMI:;
ASSIGN:=
..ID:arr
..LBRAK:[
....INT_LIT:1
..RBRAK:]
..INT_LIT:23
SEMI:;
ASSIGN:=
..ID:arr
..LBRAK:[
....INT_LIT:2
..RBRAK:]
..INT_LIT:1
SEMI:;
ASSIGN:=
..ID:arr
..LBRAK:[
....INT_LIT:3
..RBRAK:]
..INT_LIT:2
SEMI:;
ASSIGN:=
..ID:arr
..LBRAK:[
....INT_LIT:4
..RBRAK:]
..INT_LIT:41
SEMI:;
ASSIGN:=
..ID:arr
..LBRAK:[
....INT_LIT:5
..RBRAK:]
..INT_LIT:621
SEMI:;
ASSIGN:=
..ID:arr
..LBRAK:[
....INT_LIT:6
..RBRAK:]
..INT_LIT:11
SEMI:;
ASSIGN:=
..ID:arr
..LBRAK:[
....INT_LIT:7
..RBRAK:]
..INT_LIT:99
SEMI:;
ASSIGN:=
..ID:arr
..LBRAK:[
....INT_LIT:8
..RBRAK:]
..INT_LIT:68
SEMI:;
ASSIGN:=
..ID:arr
..LBRAK:[
....INT_LIT:9
..RBRAK:]
..INT_LIT:44
SEMI:;
ASSIGN:=
..ID:arr
..LBRAK:[
....INT_LIT:10
..RBRAK:]
..INT_LIT:55
SEMI:;
KW_IN:in
KW_FOREACH:foreach
ID:i
..OP_DOTDOT:..
....INT_LIT:1
....INT_LIT:9
KW_DO:do
..KW_IN:in
..KW_FOREACH:foreach
..ID:j
....OP_DOTDOT:..
......INT_LIT:2
......INT_LIT:10
..KW_DO:do
....KW_IF:if
......OP_GREATER:>
........ID:arr
........LBRAK:[
..........ID:i
........RBRAK:]
........ID:arr
........LBRAK:[
..........OP_PLUS:+
............ID:i
............INT_LIT:1
........RBRAK:]
....KW_THEN:then
......EXCHANGE:<->
........ID:arr
........LBRAK:[
..........ID:i
........RBRAK:]
........ID:arr
........LBRAK:[
..........OP_PLUS:+
............ID:i
............INT_LIT:1
........RBRAK:]
......SEMI:;
....KW_END:end
....KW_IF:if
..KW_END:end
..KW_FOR:for
KW_END:end
KW_FOR:for
KW_IN:in
KW_FOREACH:foreach
ID:i
..OP_DOTDOT:..
....INT_LIT:1
....INT_LIT:10
KW_DO:do
..PRINT:print
....ID:arr
....LBRAK:[
......ID:i
....RBRAK:]
..SEMI:;
KW_END:end
KW_FOR:for
ASSIGN:=
..ID:t
..OP_COMMA:,
....INT_LIT:0
....OP_COMMA:,
......INT_LIT:1
......INT_LIT:3
SEMI:;
ASSIGN:=
..ID:tt
..OP_COMMA:,
....INT_LIT:3
....OP_COMMA:,
......INT_LIT:2
......INT_LIT:1
SEMI:;
ASSIGN:=
..ID:ttt
..OP_COMMA:,
....INT_LIT:0
....OP_COMMA:,
......INT_LIT:0
......OP_COMMA:,
........INT_LIT:0
........OP_COMMA:,
..........INT_LIT:0
..........OP_COMMA:,
............INT_LIT:0
............INT_LIT:0
SEMI:;
ASSIGN:=
..ID:ttt
..OP_COMMA:,
....ID:t
....ID:tt
SEMI:;
ASSIGN:=
..ID:tt
..ID:t
SEMI:;
ASSIGN:=
..OP_COMMA:,
....ID:a
....LBRAK:[
......INT_LIT:1
....RBRAK:]
....ID:a
....LBRAK:[
......INT_LIT:2
....RBRAK:]
..OP_COMMA:,
....ID:a
....LBRAK:[
......INT_LIT:2
....RBRAK:]
....ID:a
....LBRAK:[
......INT_LIT:1
....RBRAK:]
SEMI:;
